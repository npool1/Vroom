{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addmachine/addmachine.component.css","webpack:///./src/app/addmachine/addmachine.component.html","webpack:///./src/app/addmachine/addmachine.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/machinedash/machinedash.component.css","webpack:///./src/app/machinedash/machinedash.component.html","webpack:///./src/app/machinedash/machinedash.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/userdash/userdash.component.css","webpack:///./src/app/userdash/userdash.component.html","webpack:///./src/app/userdash/userdash.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,yD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AACc;AAEW;AACS;AACH;AAChB;AACS;AAEjE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,UAAU,EAAC,SAAS,EAAE,8EAAiB,EAAE;IACjD,EAAE,IAAI,EAAE,aAAa,EAAC,SAAS,EAAE,uFAAoB,EAAE;IACvD,EAAE,IAAI,EAAE,YAAY,EAAC,SAAS,EAAE,oFAAmB,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAC,SAAS,EAAE,qEAAc,EAAE;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAC,SAAS,EAAE,8EAAiB,EAAE;IACjD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;CACtD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtB7B,mB;;;;;;;;;;;ACAA,yJAAyJ,SAAS,0X;;;;;;;;;;;;;;;;;;;;;;;;;ACAxH;AACG;AAO7C;IAEE,sBAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAD7C,UAAK,GAAG,OAAO,CAAC;IAC+B,CAAC;IAFrC,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGkC,yDAAW;OAFlC,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AACA;AACW;AAEA;AACT;AACmB;AACS;AACH;AACf;AACS;AAoBlE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8EAAiB;gBACjB,uFAAoB;gBACpB,oFAAmB;gBACnB,sEAAc;gBACd,+EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AChCqB;AACO;AAKlD;IAEE,qBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAE1C,gCAAU,GAAV,UAAW,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,+BAAS,GAAT,UAAU,IAAI;QACZ,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAZU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG2B,+DAAU;OAF1B,WAAW,CAavB;IAAD,kBAAC;CAAA;AAbuB;;;;;;;;;;;;ACNxB,8BAA8B,sBAAsB,KAAK,C;;;;;;;;;;;ACAzD,iFAAiF,oBAAoB,4V;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnD;AACJ;AACkB;AAOhE;IAKE,wBAAoB,YAAyB,EAAU,MAAsB,EAAU,OAAe;QAAlF,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAE3G,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;IAC5C,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,UAAU,CAAC,SAAS,CAAC,cAAI;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,EAAC;gBAChC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAtBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMkC,yDAAW,EAAkB,8DAAc,EAAmB,sDAAM;OAL3F,cAAc,CAwB1B;IAAD,qBAAC;CAAA;AAxB0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,0D;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,mB;;;;;;;;;;;ACAA,iFAAiF,oBAAoB,uV;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnD;AACJ;AACiB;AAO/D;IAOE,2BAAoB,YAAyB,EAAU,MAAsB,EAAU,OAAe;QAAlF,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAE3G,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;IAC5C,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,UAAU,CAAC,SAAS,CAAC,cAAI;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,EAAC;gBAChC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IA1BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAQkC,yDAAW,EAAkB,8DAAc,EAAmB,sDAAM;OAP3F,iBAAiB,CA4B7B;IAAD,wBAAC;CAAA;AA5B6B;;;;;;;;;;;;ACT9B,mB;;;;;;;;;;;ACAA,sCAAsC,kBAAkB,qgB;;;;;;;;;;;;;;;;;;;;;;;;ACAN;AASlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IAEA,CAAC;IANU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAQ7B;IAAD,wBAAC;CAAA;AAR6B;;;;;;;;;;;;;;ACT9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\r\\n  addmachine works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-addmachine',\r\n  templateUrl: './addmachine.component.html',\r\n  styleUrls: ['./addmachine.component.css']\r\n})\r\nexport class AddmachineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserdashComponent } from './userdash/userdash.component';\r\nimport { MachinedashComponent } from './machinedash/machinedash.component';\r\nimport { AddmachineComponent } from './addmachine/addmachine.component';\r\nimport { LoginComponent} from './login/login.component';\r\nimport { RegisterComponent} from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'userdash',component: UserdashComponent },\r\n  { path: 'machinedash',component: MachinedashComponent },\r\n  { path: 'addmachine',component: AddmachineComponent },\r\n  { path: 'login',component: LoginComponent },\r\n  { path: 'register',component: RegisterComponent },\r\n  { path: '', pathMatch: 'full', redirectTo: '/login' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n</div>\\r\\n<button [routerLink]=\\\"['login']\\\">Login</button>\\r\\n<button [routerLink]=\\\"['register']\\\">Register</button>\\r\\n<button [routerLink]=\\\"['userdash']\\\">User Dashboard</button>\\r\\n<button [routerLink]=\\\"['machinedash']\\\">Machine Dashboard</button>\\r\\n<button [routerLink]=\\\"['addmachine']\\\">Add Machine</button>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Vroom';\r\n  constructor(private _httpService: HttpService){}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; \r\nimport { HttpService } from './http.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserdashComponent } from './userdash/userdash.component';\r\nimport { MachinedashComponent } from './machinedash/machinedash.component';\r\nimport { AddmachineComponent } from './addmachine/addmachine.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserdashComponent,\r\n    MachinedashComponent,\r\n    AddmachineComponent,\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [HttpService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  createUser(user){\r\n    console.log(\"in HttpService createUser, user: \", user);\r\n    return this._http.post('/register',user);\r\n  }\r\n\r\n  loginUser(user){\r\n    console.log(\"in HttpService loginUser, user: \", user);\r\n    return this._http.post('/login',user);\r\n  }\r\n}\r\n","module.exports = \".errorText {\\r\\n    color: purple;\\r\\n}\"","module.exports = \"<h2></h2>\\r\\n<p *ngIf=\\\"error_Present\\\" class=\\\"errorText\\\" >{{ error['message'] }}</p>\\r\\n<form (submit)=\\\"onSubmit()\\\">\\r\\n  <label>Username</label>\\r\\n  <input type=\\\"text\\\" name=\\\"user.username\\\" [(ngModel)]=\\\"user.username\\\" />\\r\\n  <p></p>\\r\\n  <label>Password</label>\\r\\n  <input type=\\\"password\\\" name=\\\"user.password\\\" [(ngModel)]=\\\"user.password\\\" />\\r\\n  <input type=\\\"submit\\\" value=\\\"Login\\\" />\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../http.service';\r\nimport { ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: any;\r\n  error: any;\r\n  error_Present: any;\r\n\r\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = { username: \"\", password: \"\"};\r\n  }\r\n\r\n  onSubmit() {\r\n    this.error_Present = false;\r\n    let observable = this._httpService.loginUser(this.user);\r\n    observable.subscribe(data => {\r\n      if (data['message'] != \"Success\"){\r\n        this.error_Present = true;\r\n        this.error = data['data']['errors']['username'];\r\n      } else {\r\n        this._router.navigate(['userdash']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  machinedash works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-machinedash',\r\n  templateUrl: './machinedash.component.html',\r\n  styleUrls: ['./machinedash.component.css']\r\n})\r\nexport class MachinedashComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2></h2>\\r\\n<p *ngIf=\\\"error_Present\\\" class=\\\"errorText\\\" >{{ error['message'] }}</p>\\r\\n<form (submit)=\\\"onSubmit()\\\">\\r\\n  <label>Username</label>\\r\\n  <input type=\\\"text\\\" name=\\\"user.username\\\" [(ngModel)]=\\\"user.username\\\" />\\r\\n  <p></p>\\r\\n  <label>Password</label>\\r\\n  <input type=\\\"password\\\" name=\\\"user.password\\\" [(ngModel)]=\\\"user.password\\\" />\\r\\n  <input type=\\\"submit\\\" value=\\\"Register\\\" />\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../http.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  user: any;\r\n  // NOTE: These error messages are not working yet\r\n  // Need to display multiple error messages\r\n  error: any;\r\n  error_Present: any;\r\n\r\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = { username: \"\", password: \"\"};\r\n  }\r\n\r\n  onSubmit() {\r\n    this.error_Present = false;\r\n    console.log(\"this.user:\", this.user);\r\n    let observable = this._httpService.createUser(this.user);\r\n    observable.subscribe(data => {\r\n      if (data['message'] != \"Success\"){\r\n        this.error_Present = true;\r\n        this.error = data['data']['errors'];\r\n        console.log(this.error);\r\n      } else {\r\n        this._router.navigate(['userdash']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  Welcome, {{req.session.user}}!\\r\\n  userdash works!\\r\\n</p>\\r\\n<h3>Your Machines</h3>\\r\\n<table>\\r\\n  <th>Machine</th>\\r\\n  <th>Model</th>\\r\\n  <th>Year</th>\\r\\n  <th>Actions</th>\\r\\n  <tr>\\r\\n    <td>Car 1</td>\\r\\n    <td>Prius</td>\\r\\n    <td>2016</td>\\r\\n    <td><button>Select</button> <button>Delete</button></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Car 2</td>\\r\\n    <td>GT-R</td>\\r\\n    <td>2018</td>\\r\\n    <td><button>Select</button> <button>Delete</button></td>\\r\\n  </tr>\\r\\n</table>\\r\\n<button><a href=''>Add Machine</a></button>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../http.service';\r\nimport { ActivatedRoute, Params, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-userdash',\r\n  templateUrl: './userdash.component.html',\r\n  styleUrls: ['./userdash.component.css']\r\n})\r\nexport class UserdashComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}